package queuesYarrays;
import java.util.Scanner;

public class MyStack {

	int top;
	int MAX;
	char[]fila;

	Scanner ss = new Scanner (System.in);

	//metodo para rellenar el array
	public char[] rellenarArray() {
		char[] stack= new char[3];
		stack[0]='a';
		stack[1]='b';
		stack[2]='c';
		return stack;
	}

	 public void imprimirArray (char lista[]){
	        for(int i=0;i<lista.length;i++){
	            System.out.println(lista[i]);
	        }
	    }

	 public char pop(char pila[]) {
		 top=pila.length;
		 if(top==0) {
		 System.out.print("Stack is empty");
		 return ('0');
		 }else {
			 char eliminado= pila[top-1];
			 top--;
			 System.out.println("El char eliminado es: " + eliminado);
			 System.out.println("Top ahora vale: " + top); 
			 return (eliminado);
		 }

	 }


	 public char[] modificarStack(char pila[]) {
		 top=pila.length;
		 System.out.println("Método para introducir o eliminar elementos de un stack");
		 System.out.println("Escriba 'i' para introducir o 'e' para eliminar un elemento");
		 String d = ss.nextLine();
		 char decision = d.charAt(0);
		 if(decision=='i') {
			 System.out.println("¿Qué caracter desea agregar?");
			 String a = ss.nextLine();
			 char agrega = a.charAt(0);
			 pila[top]= agrega;   
		 }
		 
		 else if(decision=='e') {
			 if(top==0) {
				 System.out.print("Stack is empty");
			 }else {
				 char eliminado= pila[top-1];
				 top--;
				 System.out.println("El char eliminado es: " + eliminado);
				 System.out.println("Top ahora vale: " + top); 
			 }
        }
		 for(int i=0;i<pila.length;i++){
	            System.out.println(pila[i]);}
		 
		return(pila);
		
	 }
	 
	
	 public void push(char value) {
			
			if(top == MAX) {
				System.out.println("valor fuera de arreglo :(");
				return;
			}
			
			fila[top] = value;
			top++;
		}
	 
	 
	 public String invertirCadena(String palabra) {
		 MyStack miStackI = new MyStack();
		 char[] stackOriginal = new char[palabra.length()];
		 char[] stackInver = new char[palabra.length()];
		 for(int i=0; i<palabra.length(); i++) {
			 stackOriginal[i] = palabra.charAt(i);
		 }
		 for(int j=0; j<palabra.length(); j++) {
			 stackInver[j] = miStackI.pop(stackOriginal);
		 }
		String newString = String.valueOf(stackInver);
		return(newString);
	 }

	

}
